services:
  database:
    image: postgres:17.4
    container_name: database-url-shortener
    ports:
      - ${DB_PORT-5432}:5432
    environment:
      - POSTGRES_DB=${DB_NAME:-url_shortener}
      - POSTGRES_USER=${DB_USERNAME:-root}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-12345678}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-root} -d ${DB_NAME:-url_shortener} -h database -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: api-url-shortener
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    volumes:
      - .:/usr/app
      - /usr/app/node_modules
    environment:
      - APP_PORT=${APP_PORT:-3000}
      - DB_NAME=${DB_NAME:-url_shortener}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-12345678}
      - DB_PORT=5432
      - DB_HOST=database
      - NODE_ENV=development
    env_file:
      - .env
    links:
      - database
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        until pg_isready -h database -p 5432 -U ${DB_USERNAME:-root}; do
          sleep 1
        done &&
        npm run typeorm migration:run &&
        npm run dev
      "

volumes:
  pgdata: